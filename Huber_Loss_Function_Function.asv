function [ x_accum ] = Huber_Loss_Function_Function( A , B , fun_handle )
%UNTITLED2 Summary of this function goes here
%   Detailed explanation goes here

[num_rows, num_columns]=size(B); 


x_accum=[]; 
for i = 1 : num_columns
    
    b=B(:, i); 
    
    %{
    Huber_Loss(fun_handle, A, b, x)



    [num_rows, num_columns]=size(A); 
    residual=A*x-b; 


    error_val=0; 

    for i = 1 : num_rows
        error_val_add=fun_handle(residual(i)); 
        error_val=error_val+error_val_add; 
    end

    %}
    
    
    %Want curried Huber_Loss without x call t
    
    
    
    ***VALID CODE, CHECK Formattting***
    
    
    
    Huber_Loss = @(fun_handle,A,b,x)(Huber_Loss(fun_handle, A, b, x)
    
    
    
    
    

    
    
    
    x_solved= fmincon(t, x0)
    
    Huber_Loss(A, b, fun_handle, x); 
    
    %{
    [num_rows, num_columns]=size(A); 
    residual=A*x-b; 


    error_val=0; 

    for i = 1 : num_rows
        error_val_add=fun_handle(residual(i)); 
        error_val=error_val+error_val_add; 
    end
    
    %}
    
    x_accum=[x_accum x_I];
    
end

